#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# ================================================================================================ #
# Project    : GenAI-Lab-SLM                                                                       #
# Version    : 0.1.0                                                                               #
# Python     : 3.10.12                                                                             #
# Filename   : /config/test/app.yaml                                                               #
# ------------------------------------------------------------------------------------------------ #
# Author     : John James                                                                          #
# Email      : john.james.ai.studio@gmail.com                                                      #
# URL        : https://github.com/variancexplained/genai-lab-slm                                   #
# ------------------------------------------------------------------------------------------------ #
# Created    : Thursday April 20th 2023 01:19:19 pm                                                #
# Modified   : Tuesday February 4th 2025 03:16:24 am                                               #
# ------------------------------------------------------------------------------------------------ #
# License    : MIT License                                                                         #
# Copyright  : (c) 2023 John James                                                                 #
# ================================================================================================ #
env: test
# ------------------------------------------------------------------------------------------------ #
#                                           SETUP                                                  #
# ------------------------------------------------------------------------------------------------ #
setup:
  data:
    source_filepath: data/stage/test/reviews
    dataset_config:
      phase: dataprep
      stage: raw
      name: review
      file_format: parquet
      dftype: pandas
# ------------------------------------------------------------------------------------------------ #
#                                          LOGGING                                                 #
# ------------------------------------------------------------------------------------------------ #
# logging:
#   disable_existing_loggers: false
#   formatters:
#     console:
#       datefmt: '%m/%d/%Y %I:%M:%S %p'
#       format: '[%(asctime)s] [%(levelname)s] [%(name)s] [%(funcName)s] : %(message)s'
#     file:
#       datefmt: '%m/%d/%Y %I:%M:%S %p'
#       format: '[%(asctime)s] [%(levelname)s] [%(name)s] [%(module)s] [%(funcName)s]
#         : %(message)s'
#   handlers:
#     console:
#       class: logging.StreamHandler
#       formatter: console
#       level: DEBUG
#       stream: ext://sys.stderr
#     file:
#       backupCount: 0
#       class: logging.handlers.TimedRotatingFileHandler
#       filename: logs/test/log
#       formatter: file
#       interval: 1
#       level: DEBUG # Default, possibly overridden in environment config
#       when: midnight
#   loggers:
#     py4j:  # Add this block to suppress py4j logging
#       level: ERROR
#       handlers:
#         - console
#         - file
#       propagate: false  # Prevent py4j logs from being propagated to the root logger
#   root:
#     handlers:
#     - console
#     - file
#     level: DEBUG # Default, possibly overridden in environment config
#   version: 1
# ------------------------------------------------------------------------------------------------ #
#                                         DATA                                                     #
# ------------------------------------------------------------------------------------------------ #
data:
  frac: 0.01
# ------------------------------------------------------------------------------------------------ #
#                                          IO                                                      #
# ------------------------------------------------------------------------------------------------ #
io:
  pandas:
    parquet:
      write_kwargs:
        row_group_size: 536870912 # 512 MB
# ------------------------------------------------------------------------------------------------ #
#                                       REPOSITORY                                                 #
# ------------------------------------------------------------------------------------------------ #
repository:
  dataset:
    fal: workspace/test/datasets/fal/
    dal: workspace/test/datasets/dal/
    ral: workspace/test/datasets/ral/




# ------------------------------------------------------------------------------------------------ #
#                                      SPARK                                                       #
# ------------------------------------------------------------------------------------------------ #
spark:
  parquet_block_size: 536870912 # 512 MB
# To compute memory limit, allocate 60%-70% of available memory and divide by nworkers to get
# memory_limit for each worker
dask:
  npartitions: 32
  nworkers: 8
  memory_limit:   "11GiB"
  threads_per_worker: 1
  processes: False
